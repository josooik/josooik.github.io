{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2021/10/19/hello-world/"},{"title":"[Python] 이미지 데이터 입출력","text":"1줄 요약 OpenCV를 활용한 다양한 이미지 입출력에 대해 배우도록 한다. Reading/Writing an image file 이미지 관련 I/O BMP, PNG, JPEG, and TIFF also supported. 123import numpy as npimg = np.zeros((3, 3), dtype=np.uint8)img array([[0, 0, 0], [0, 0, 0], [0, 0, 0]], dtype=uint8) 각 픽셀은 8비트 int로 구성되어 있음. 각 픽셀의 범위는 0-255, 0은 검은색, 255는 흰색을 의미함. 123import cv2 img = cv2.cvtColor(img, cv2.COLOR_GRAY2BGR)img array([[[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0], [0, 0, 0]]], dtype=uint8) 3차원 배열을 의미. 각 채널은 Blue, Green, Red를 의미한다. image Load Convert PNG into JPEG 사용할 이미지는 아래와 같다.12image = cv2.imread(&quot;MyPic.png&quot;)cv2.imwrite(&quot;MyPic.jpg&quot;, image) Trueimread Options 지원 옵션은 다음과 같습니다. URL: https://docs.opencv.org/4.0.1/d4/da8/group__imgcodecs.html#ga61d9b0126a3e57d9277ac48327799c80123import cv2grayImage = cv2.imread(&quot;MyPic.png&quot;, cv2.IMREAD_GRAYSCALE)cv2.imwrite(&quot;output/MyPicGray.png&quot;, grayImage) True OpenCV 이미지는 2D[0, 0] or 3D[0, 0, 0] array of numpy.array type. 이 때, 첫번째 인덱스는 y coordinate or row를 의미합니다. 두번째 인덱스는 x coordinate or column을 의미합니다. 마지막 인덱스는 color channel을 의미합니다. bytearray 파이썬 내부 모듈인 bytearray를 활용하도록 합니다. 12345678910import cv2import numpy as npimport os# Make an array of 12,000 random bytesrandomByteArray = bytearray(os.urandom(120000))flatNumpyArray = np.array(randomByteArray)# np.random.ranint(0, 256, 12000)grayImage = flatNumpyArray.reshape(300, 400)print(grayImage.shape)cv2.imwrite(&quot;output/RandomGray.png&quot;, grayImage) (300, 400) True12bgrImage = flatNumpyArray.reshape(200, 200, 3)cv2.imwrite(&quot;output/RandomColor.png&quot;, bgrImage) True이미지 데이터 핸들링 이미지를 불러와서 약간의 가공을 진행하도록 합니다. 먼저, color image에 white 점(dot)을 추가하도록 합니다. 123456import cv2import matplotlib.pyplot as pltimg = cv2.imread(&quot;MyPic.png&quot;)plt.imshow(img)plt.title(&quot;Original Pic&quot;)plt.show() 12345678910111213141516171819202122import cv2import matplotlib.pyplot as pltdef plot_comparison(original, filtered, title_filtered): fig, (ax1, ax2) = plt.subplots(ncols = 2, figsize=(16, 12), sharex=True, sharey=True) ax1.imshow(original, cmap = plt.cm.gray) ax1.set_title(&quot;original&quot;) ax1.axis('off') ax2.imshow(filtered, cmap = plt.cm.gray) ax2.set_title(title_filtered) ax2.axis('off')img = cv2.imread(&quot;MyPic.png&quot;)img[249, 255] = [255, 255, 255]img[250, 255] = [255, 255, 255]img[251, 255] = [255, 255, 255]img[252, 255] = [255, 255, 255]img[253, 255] = [255, 255, 255]img[249, 254] = [255, 255, 255]img[250, 254] = [255, 255, 255]img[251, 254] = [255, 255, 255]img[252, 254] = [255, 255, 255]img[253, 254] = [255, 255, 255]cv2.imwrite(&quot;output/MyPic_mask.png&quot;, img) True 123img = cv2.imread(&quot;MyPic.png&quot;)img2 = cv2.imread(&quot;output/MyPic_mask.png&quot;)plot_comparison(img, img2, &quot;Masked pic&quot;) 오른쪽 그림에서 오른쪽 하단에 보면 하얀색 Dots(점)들이 생긴 것을 확인 할 수 있다… 이와 비슷한 방식으로 itemset or ROI(Regions of Interests) 등을 사용할 수 있다. URL: https://docs.opencv.org/master/d3/df2/tutorial_py_basic_ops.html","link":"/2021/06/02/test/"}],"tags":[{"name":"이미지 전처리","slug":"이미지-전처리","link":"/tags/%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%A0%84%EC%B2%98%EB%A6%AC/"},{"name":"OpenCV","slug":"OpenCV","link":"/tags/OpenCV/"},{"name":"Python","slug":"Python","link":"/tags/Python/"}],"categories":[{"name":"이미지 전처리","slug":"이미지-전처리","link":"/categories/%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%A0%84%EC%B2%98%EB%A6%AC/"},{"name":"OpenCV","slug":"이미지-전처리/OpenCV","link":"/categories/%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%A0%84%EC%B2%98%EB%A6%AC/OpenCV/"},{"name":"Python","slug":"이미지-전처리/OpenCV/Python","link":"/categories/%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%A0%84%EC%B2%98%EB%A6%AC/OpenCV/Python/"}]}